<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
    xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">


    <!-- Create an application context aware bean -->
    <bean id="securityUtils" class="com.example.utils.spring.SecurityUtils">
    	<property name="securityContext" >
          <bean class="org.springframework.security.core.context.SecurityContextHolder"
                 factory-method="getContext">
          </bean>
        </property> 
    </bean>

	<!-- LDAP server details -->
	<security:authentication-manager>
		<security:authentication-provider ref="ldapActiveDirectoryAuthProvider" />
	</security:authentication-manager>
	<bean id="grantedAuthoritiesMapper" class="com.example.security.ActiveDirectoryGrantedAuthoritiesMapper"/>
	<bean id="ldapActiveDirectoryAuthProvider" class="org.springframework.security.ldap.authentication.ad.ActiveDirectoryLdapAuthenticationProvider">
		<constructor-arg value="${ldap.domain}" />
		<constructor-arg value="${ldap.server.url}" />
		<property name="authoritiesMapper" ref="grantedAuthoritiesMapper" />
		<property name="useAuthenticationRequestCredentials" value="true" />
		<property name="convertSubErrorCodesToExceptions" value="true" />
	</bean>
	<security:http auto-config="true" use-expressions="true">
		<!-- Login pages -->
		<security:form-login login-page="/login" default-target-url="/welcome"
			login-processing-url="/j_spring_security_check" authentication-failure-url="/login-error"
			authentication-success-handler-ref="roleForwardingAuthenticationSuccessHandler" />
		<security:logout logout-success-url="/login"/>

		<!-- Security zones -->
		<security:intercept-url pattern="/login*" access="permitAll" />
		<security:intercept-url pattern="/client/**" access="permitAll" />
		<security:intercept-url pattern="/projects/**" access="permitAll" />
		<security:intercept-url pattern="/time/**" access="permitAll" />
		<!--
		<security:intercept-url pattern="/client/**" access="hasAnyRole('ROLE_OFFICE_ADMIN','ROLE_ADMIN')" />
		<security:intercept-url pattern="/projects/**" access="hasAnyRole('ROLE_OFFICE_ADMIN','ROLE_ADMIN')" />
		<security:intercept-url pattern="/time/**" access="hasAnyRole('ROLE_EMPLOYEE','ROLE_ADMIN')" />
		-->
	</security:http>

	<bean id="roleForwardingAuthenticationSuccessHandler"
     	class="com.example.security.RoleForwardingAuthenticationSuccessHandler" />
</beans>
